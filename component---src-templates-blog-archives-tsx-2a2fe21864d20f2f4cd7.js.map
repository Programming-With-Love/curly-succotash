{"version":3,"file":"component---src-templates-blog-archives-tsx-2a2fe21864d20f2f4cd7.js","mappings":"wLAGA,WACEA,GAIA,IAAMC,EAAM,iBACPD,EADO,CAEVE,UAAWC,GAAAA,CCTO,+BDSsBH,EAAME,aAGhD,cADOD,EAAOG,MAEZ,uBACEC,MAAO,CACLC,SAAU,aAGZ,uBAAUL,GACTD,EAAMI,S,mCElBb,eAAe,OACb,2BACE,sBAAIC,MAAO,CAAEE,UAAW,SAAUC,OAAQ,MAA1C,gB,iGCCiBC,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAyBlB,OAzBkBA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACnBC,OAAA,WAAU,IAAD,OACDC,EAAM,iBAAQC,KAAKZ,OAEzB,cADOW,EAAOE,MAEZ,gBAAC,EAAAC,YAAD,CACEC,MAAK,aASLL,OAAQ,SAACM,GAAD,OACN,gBAAC,IAAD,eACEH,MACE,EAAKb,MAAMa,MAAW,EAAKb,MAAMa,MAAjC,MAA4CG,EAAKC,KAAKC,aAAaL,MAAUG,EAAKC,KAAKC,aAAaL,OAElGF,QAKb,EAzBkBF,CAAiBU,EAAAA,Y,8GCMtC,WAAgBnB,GAAD,OACb,sBAAIE,UCTY,qCDUbF,EAAMgB,KAAKI,KAAI,WAA0BC,GAA1B,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,YAAX,OACd,sBAAIC,IAAKH,GACP,gBAAC,EAAAI,KAAD,CAAMC,GAAIJ,EAAOK,MACf,wBAAMzB,UCfE,qCDewBqB,EAAYK,aAC5C,qBAAG1B,UCfM,sCDeqBqB,EAAYV,c,UERpD,WAAgBb,GAAD,OACb,2BACqB,MAAlBA,EAAM6B,SACL,gBAACC,EAAA,EAAD,MAEA9B,EAAM6B,SAAST,KAAI,YAAsB,IAAnBW,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC1B,OACE,uBAAKR,IAAKO,GACR,sBAAI7B,UCfE,gCDewB6B,GAC9B,gBAACE,EAAD,CAAejB,KAAMgB,U,oBEPjC,WAAgBhC,GAOd,OACE,gBAAC,KAAD,CAAYkC,WAAYC,EAAAA,EAAAA,eACtB,gBAAC1B,EAAA,EAAD,CAAUI,MAAM,OAChB,gBAACuB,EAAA,EAAD,KACE,gBAACC,EAAD,CAAUR,SAAU7B,EAAMsC,YAAYT","sources":["webpack://curly-succotash/./src/components/Main.tsx","webpack://curly-succotash/./src/components/Main.module.scss","webpack://curly-succotash/./src/components/base/NoData.tsx","webpack://curly-succotash/./src/components/base/Position.tsx","webpack://curly-succotash/./src/components/CleanPostList.tsx","webpack://curly-succotash/./src/components/CleanPostList.module.scss","webpack://curly-succotash/./src/components/Archives.tsx","webpack://curly-succotash/./src/components/Archives.module.scss","webpack://curly-succotash/./src/templates/blog-archives.tsx"],"sourcesContent":["import * as React from 'react'\nimport * as classes from './Main.module.scss'\nimport classnames from 'classnames'\nexport default (\n  props: React.HTMLProps<HTMLMainElement> & {\n    extra?: React.ReactElement<any>\n  }\n) => {\n  const tProps = {\n    ...props,\n    className: classnames(classes.mainRoot, props.className),\n  }\n  delete tProps.extra\n  return (\n    <div\n      style={{\n        position: 'relative',\n      }}\n    >\n      <main {...tProps} />\n      {props.extra}\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport var mainRoot = \"Main-module--mainRoot--5Dyrp\";","import * as React from 'react'\n\nexport default () => (\n  <div>\n    <h1 style={{ textAlign: 'center', margin: 100 }}>没有鸡，哪来的蛋呢</h1>\n  </div>\n)\n","import { Helmet, HelmetProps } from 'react-helmet'\nimport * as React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Query } from '../../graphql-types'\n\nexport default class Position extends React.Component<HelmetProps> {\n  render() {\n    const dProps = { ...this.props }\n    delete dProps.title\n    return (\n      <StaticQuery\n        query={graphql`\n          query PositionQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `}\n        render={(data: Query) => (\n          <Helmet\n            title={\n              this.props.title ? `${this.props.title} - ${data.site.siteMetadata.title}` : data.site.siteMetadata.title\n            }\n            {...dProps}\n          />\n        )}\n      />\n    )\n  }\n}\n","import * as React from 'react'\nimport { frontmatter_3, fields_3 } from '../graphql-types'\nimport * as classes from './CleanPostList.module.scss'\nimport { Link } from 'gatsby'\nexport interface CleanPostListProps {\n  data: {\n    fields: fields_3\n    frontmatter: frontmatter_3\n  }[]\n}\n\nexport default (props: CleanPostListProps) => (\n  <ul className={classes.list}>\n    {props.data.map(({ fields, frontmatter }, index) => (\n      <li key={index}>\n        <Link to={fields.slug}>\n          <time className={classes.time}>{frontmatter.createdDate}</time>\n          <p className={classes.title}>{frontmatter.title}</p>\n        </Link>\n      </li>\n    ))}\n  </ul>\n)\n","// extracted by mini-css-extract-plugin\nexport var time = \"CleanPostList-module--time--jF7pt\";\nexport var title = \"CleanPostList-module--title--2djCc\";\nexport var list = \"CleanPostList-module--list--2TQ4b\";","import * as React from 'react'\nimport { IArchive } from '../templates/blog-archives'\nimport * as classes from './Archives.module.scss'\nimport CleanPostList from './CleanPostList'\nimport NoData from './base/NoData'\nexport interface ArchivesProps {\n  archives: IArchive[]\n}\n\nexport default (props: ArchivesProps) => (\n  <div>\n    {props.archives == null ? (\n      <NoData />\n    ) : (\n      props.archives.map(({ year, posts }) => {\n        return (\n          <div key={year}>\n            <h2 className={classes.year}>{year}</h2>\n            <CleanPostList data={posts} />\n          </div>\n        )\n      })\n    )}\n  </div>\n)\n","// extracted by mini-css-extract-plugin\nexport var archivesContent = \"Archives-module--archivesContent--3f6GN\";\nexport var year = \"Archives-module--year--1BLvZ\";","import * as React from 'react'\nimport { Query, MarkdownRemark } from '../graphql-types'\nimport { WithLayout } from '../containers/LayoutContainer'\nimport { HeaderType } from '../contants/header'\nimport Archives from '../components/Archives'\nimport Main from '../components/Main'\nimport Position from '../components/base/Position'\nexport interface IArchive {\n  year: number\n  posts: MarkdownRemark[]\n}\nexport default (props: {\n  data: Query\n  pageContext: {\n    archives: IArchive[]\n    totalCount: number\n  }\n}) => {\n  return (\n    <WithLayout headerType={HeaderType.AUTHOR_HEADER}>\n      <Position title=\"归档\" />\n      <Main>\n        <Archives archives={props.pageContext.archives} />\n      </Main>\n    </WithLayout>\n  )\n}\n"],"names":["props","tProps","className","classnames","extra","style","position","textAlign","margin","Position","render","dProps","this","title","StaticQuery","query","data","site","siteMetadata","React","map","index","fields","frontmatter","key","Link","to","slug","createdDate","archives","NoData","year","posts","CleanPostList","headerType","HeaderType","Main","Archives","pageContext"],"sourceRoot":""}